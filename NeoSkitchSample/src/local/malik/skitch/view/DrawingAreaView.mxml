<?xml version="1.0" encoding="utf-8"?>
<!--

Copyright (c) 2013 malikdul ( malikdul@gmail.com )
Licensed under the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

For more information see COPYING.txt file in the root folder

-->

<s:SkinnableContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
					  xmlns:s="library://ns.adobe.com/flex/spark" 
					  xmlns:mx="library://ns.adobe.com/flex/mx"
					  implements="local.malik.skitch.view.drawing.interfaces.IShapeContainer"
					  name="DrawingArea"
					  creationComplete="init(event)"
					  
					  backgroundAlpha="0.001"
					  backgroundColor="#0"
					  >
	<fx:Script>
		<![CDATA[
			import local.malik.skitch.view.drawing.controller.DrawingController;
			import local.malik.skitch.view.drawing.controller.ProxyDrawingController;
			import local.malik.skitch.view.drawing.interfaces.IShape;
			
			import mx.core.IVisualElement;
			import mx.core.UIComponentCachePolicy;
			import mx.events.FlexEvent;
			
			private var proxycontroller:ProxyDrawingController;	
			private var controller:DrawingController;	
			
			protected function init(event:FlexEvent):void
			{
				cachePolicy 	= UIComponentCachePolicy.ON;
				cacheAsBitmap 	= true;
				
				proxycontroller = new ProxyDrawingController( this );
				controller		= new DrawingController(this);
				
				this.addEventListener(MouseEvent.MOUSE_DOWN, proxycontroller.mouseDownHandler);
				this.addEventListener(MouseEvent.MOUSE_MOVE, proxycontroller.mouseMoveHandler);
				this.addEventListener(MouseEvent.MOUSE_UP, proxycontroller.mouseUpHandler);
			}
			
			public function deleteSelected():void
			{
				var Selected:Array = controller.currentlySelected();
				
				while(Selected.length > 0)
				{
					removeElement(Selected.pop());
				}
			}
			
			override public function removeElement(element:IVisualElement):IVisualElement
			{
				var el:IShape = element as IShape;
				if(el)
				{
					controller.UnRegisterShape(el as IShape);
				}
				
				return super.removeElement( element );
			}
			
			override public function addElement(element:IVisualElement):IVisualElement
			{
				var el:IShape = element as IShape;
				if(el)
				{
					controller.RegisterShape(el as IShape);
				}
				return super.addElement( element);
			}
			
			override public function removeAllElements():void
			{
				while(this.numElements > 0)
				{
					removeElement(this.getElementAt(0));
				}
			}
			
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	
	<s:layout>
		<s:BasicLayout />
	</s:layout>
	
	
	
	
</s:SkinnableContainer>
